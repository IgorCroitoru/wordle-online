# Multi-stage build for backend
FROM node:20-alpine AS base
WORKDIR /app

# Install dependencies stage
FROM base AS deps
RUN apk add --no-cache libc6-compat
COPY package.json yarn.lock* ./
COPY backend/package.json ./backend/
RUN corepack enable && yarn install --frozen-lockfile

# Build stage
FROM base AS builder
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN yarn workspace backend build

# Runtime stage
FROM base AS runner
ENV NODE_ENV=production
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 backend
RUN apk add --no-cache curl

# Copy built application
COPY --from=builder --chown=backend:nodejs /app/backend/dist ./dist
COPY --from=builder --chown=backend:nodejs /app/backend/package.json ./
COPY --from=builder --chown=backend:nodejs /app/backend/data ./dist/data

# Copy only production dependencies
COPY --from=deps --chown=backend:nodejs /app/node_modules ./node_modules

USER backend
EXPOSE 3001

HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

CMD ["node", "dist/index.js"]
